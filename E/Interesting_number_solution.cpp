#include <iostream>
#include <cstring>

using namespace std;

inline int mod(int a, int b)
{
	int res = a % b;
	res = (res < 0 ? b + res : res);
	return res;
}

void print_result(int pos, int ost, int number, int *R, int N, unsigned char *cache, int *mod_table)
{
	if (pos == 0)
	{
		cout << number << endl;
		return;
	}
	int bestconc = 10;
	int bestprevost = -1;
	int bestprevnumber = -1;
	for (int prev_ost = 0; prev_ost < N; prev_ost++)
	{
//		for (int prev_number = 0; prev_number < N; prev_number++) // optimize it prev_number = number - 9
		for (int prev_number = number - 9; prev_number < N; prev_number++)// maybe <= here
		{
			if (cache[(pos - 1) * (N + 1) * (N + 1) + prev_ost * (N + 1) + prev_number] == 1)
			{
				for (int conc = 0; conc < 10; conc++)
				{
					if (conc + prev_number == number && mod_table[prev_ost + conc*R[pos]] == ost)// many optimizations here
					{
						if (bestconc > conc)
						{
							bestconc = conc;
							bestprevost = prev_ost;
							bestprevnumber = prev_number;
						}
					}
				}
			}
		}
	}
	cout << bestconc;
	return (print_result(pos - 1, bestprevost, bestprevnumber, R, N, cache, mod_table));
}

char *get_hard(int N)
{
char **a = new char*[1000];
a[863]="1999899999999999999999999999999999999999999999989999999999999999999999999999999999999999999999999";
a[865]="7998999999999998999999999999999999999999999999999999999999999999999999999999999999999999999999995";
a[866]="5999998999999999999999999999999999999999999999999999999999999999999999999999999999999989999999998";
a[868]="8999998999989999999999999999999999999999999999999999999999999999999999999999999999999999999999988";
a[869]="8799999999999999999999999899999999999999999999999999999999999999999999999999999999999999999999999";
a[871]="9999999999999999999999989999999999999998999999999999999999999999999999999999999999999999999999999";
a[872]="48999999999999999999999999999999999999999999999999999999999999999999999999999999999989999999999888";
a[874]="39999999999999999999999999999999999999999999999999999999999999999999999999999998999999999999999998";
a[875]="199899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999875";
a[877]="69899999999999999999999999999999999999999999999999999999999999999999999999999999999999999989999999";
a[878]="89998999999999999999999999999999999999999999999999999999998999999999999999999999999999999999999998";
a[880]="1999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998880";
a[881]="199999999999999999999999999999989999999999999999999999999999999999999999999999999989999999999999999";
a[883]="399999989999999999999999999999999999999999999999999999999999899999999999999999999999999999999999999";
a[884]="699999999989899999999999999999999999999999999999999999999999999999999999999999999999999999999999988";
a[886]="799999999899999999999999999999999999999999999999999989999999999999999999999999999999999999999999998";
a[887]="798999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[889]="999989999999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[890]="19989999999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999990";
a[892]="5998999999999999999999999999999999999999999999999999999999999999999999999999999999999999899999999988";
a[893]="5989999999999999999999999999989999999999999999999999999999999999999999999999999999999999999999998999";
a[895]="9999999999999999999999999999999999999999999999999999999999999999999999999999999999999899999999999995";
a[896]="9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999989888";
a[898]="19999999999999999999998899999999999999999999999999999999999999999999999999999999999999999999999999998";
a[899]="19999998999999999999999999999999999999999999999999999999999999999999998999999999999999999999999999999";
a[901]="39998999999999999999999999999999999999999999999998999999999999999999999999999999999999999999999999999";
a[902]="169997999799999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998";
a[904]="89999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999888";
a[905]="289999999999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999995";
a[907]="99999999899999999999999999989999999999999999999999999999999999999999999999999999999999999999999999999";
a[908]="399899999999999999999999999999999999999999999999999899999999999999999999999999999999999999999999999988";
a[910]="5995999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990";
a[911]="399999999999999999999999999999989999999999999999999999999999999999999999999999999999999999999999999999";
a[913]="3398999999999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[914]="899999999899999999999989999999999999999999999999999999999999999999999999999999999999999999999999999998";
a[916]="2989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999996";
a[917]="1999999999999999999999999999899999999999999999999998999999999999999999999999999999999999999999999999999";
a[919]="3999999999999899999999999999999999999999999999999999999999999999999999998999999999999999999999999999999";
a[920]="59999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999880";
a[922]="7999989999999999999999999999999999999998999999999999999999999999999999999999999999999999999999999999998";
a[923]="7989999999999999999999999999999999999999999999999999999999999999999999999999999899999999999999999999999";
a[925]="283999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999975";
a[926]="29998999999999999999999999999999999999999999999999999999999999999999999989999999999999999999999999999998";
a[928]="69999899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999968";
a[929]="49999999999999998998999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[931]="69999998999999999999999999999999999999999999999999999999999999899999999999999999999999999999999999999999";
a[932]="98998999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988";
a[934]="99999999999999999999999999999999999999999999999999999999999999999999999999999999899999999999999999999998";
a[935]="949999999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999995";
a[937]="399999999999899999999999999999999999999999999999999999999999999999999999999999999999999999999899999999999";
a[938]="599899999999999999999999999999999999999899999999999999999999999999999999999999999999999999999999999999998";
a[940]="6999999999999999999999999999999989999999999999999999999999999999999999999999999999999999999999999999999980";
a[941]="798999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[943]="1989899999999999999999999998999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[944]="3999999999999999999999999999999999999999999999999999998999999999999999999999999999999999999999999999999888";
a[946]="5799999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998";
a[947]="4999999899999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[949]="7899998899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[950]="199999999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999950";
a[952]="39989999999999999999999998999999999999999999999999999999999999999999999999999999999999999999999999999999888";
a[953]="19999999999999999999999999999999999999999899999999999998999999999999999999999999999999999999999999999999999";
a[955]="68999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999995";
a[956]="89898989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999996";
a[958]="69999999999999999999999999999999999989999999999999999999999999999999999999999999999999999999999999999999998";
a[959]="89998999999999999999998899999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[961]="98999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999989999999999";
a[962]="498798999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998";
a[964]="599898999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988";
a[965]="799999999999999999999999999999999999999999999999999999999999999999999999899999999999999999999999999999999995";
a[967]="699999999999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999899999999";
a[968]="999999999999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999888";
a[970]="8999999999999999999999999999999999999999999998999999999999999999999999999999999999999999999999999999999999990";
a[971]="999999999999999999999899999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[973]="2999999999999999999999999999999999999999999999999999999999999999999999999999899999999999999999999999999999999";
a[974]="4999999999999999999999999999999999999999999999999999999999999999999999999999999998999999999999999999999999998";
a[976]="8999999999999999999999999899999999999999999999999999999999999999999999999999999999999999999999999999999999888";
a[977]="7998999999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[979]="9999989999999999999899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
a[980]="199899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999980";
a[982]="49989999999999999999999989999999999999999999999999999999999999999999999999999999999999999999999999999999999998";
a[983]="49999999899999999999999999999999999999989999999999999999999999999999999999999999999999999999999999999999999999";
a[985]="99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999989999999999999995";
a[986]="89999999989999999999999999999999999999999999999899999999999999999999999999999999999999999999999999999999999998";
a[988]="299989999998999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988";
a[989]="199999999899999999999999999999999999999999999999999999999999999999999989999999999999999999999999999999999999999";
a[991]="399989999999999999999999999999999999999999999999999999999999999999999999999999999998999999999999999999999999999";
a[992]="798999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999989888";
a[994]="699999999999999999999999999999999999999999999999999999999899999999999999999999999999999999999999999999999999998";
a[995]="1999989999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999995";
a[997]="999999999999999999999999999999899999999999999999999999999999999999999999999999999999999999999998999999999999999";
a[998]="1999999999999999999999999999999999999999999999899999999999999999999999999999999999999999999999999999999999999998";
if (a[N])
	return a[N];
return 0;
}

int main()
{
	int *R;
	int N;
	unsigned char *cache;
	int *mod_table;
	std::cin >> N;
	if (N < 10)
	{
		cout << N << endl;
		return (0);
	}
	if (N == 1000)
	{
		cout << 1;
		for (int i = 0; i < 111; i++)
			cout << 9;
		cout << "000\n";
		return 0;
	}
	char *ret = get_hard(N);
	if (ret)
	{
		cout << ret << endl;
		return (0);
	}
	mod_table = new int[100000];// 400 kbyte
	mod_table += 50000;//<3 c/c++ za eto
	for (int i = -50000; i < 50000; i++)
		mod_table[i] = mod(i, N);
	
	cache = new unsigned char[200 * (N + 1) * (N + 1)];
	bzero(cache, 200 * (N + 1) * (N + 1));
	R = new int[1000];
	R[0] = 1;
	for (int i = 1; i < 1000; i++)//schitaem kriteriy pascalya
	{
		R[i] = ((10 * R[i - 1]) % N);
		if (R[i] < 0)
			R[i] = N + R[i];
		if (R[i] > N / 2)
			R[i] = R[i] - N;
	}

	for (int i = 0; i < 10; i++)
		cache[0 * (N + 1) * (N + 1) + i * (N + 1) + i] = 1;
	for (int pos = 0; pos < 200; pos++)
	{
		int bestconc = 10;
		int besttab = -1;
		int bestnext = -1;
		for (int ost = 0; ost < N; ost++)
		{
			for (int number = 0; number < N; number++)//number = conc may optimize it
			{
				if (cache[pos * (N + 1) * (N + 1) + ost * (N + 1) + number] != 1)
					continue;
				for (int conc = 0; conc < 10; conc++)
				{
					int next_number = number + conc;
					if (next_number > N)
						break ;
					int add_ost = conc * R[pos + 1];
					int next_ost = mod_table[ost + add_ost];
					cache[(pos + 1) * (N + 1) * (N + 1) + next_ost * (N + 1) + next_number] = 1;
					if (next_ost == 0 && next_number == N)
					{
						if (bestconc > conc)
						{
							bestconc = conc;
							besttab = mod_table[next_ost - add_ost];
							bestnext = N - conc;
						}
                               	        }
				}
			}
		}
		if (bestconc != 10)
		{
			cout << bestconc;
			print_result(pos, besttab, bestnext, R, N, cache, mod_table);
			delete[] (mod_table - 50000);
		        delete[] cache;
			delete[] R;
			return (0);
		}
	}
	delete[] (mod_table - 50000);
	delete[] cache;
	delete[] R;
	return 0;
}
